{"version":3,"sources":["pages/About.js","pages/Clients.js","pages/NoMatch.js","components/Navbar/index.js","components/Header/index.js","components/Wrapper/index.js","components/Jumbotron/index.js","components/Footer/index.js","components/Col/index.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","Fragment","Clients","props","NoMatch","Navbar","className","react_router_dom","to","window","location","pathname","Header","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","onClick","handleFormSubmit","Wrapper","children","Jumbotron","_ref","style","height","clear","paddingTop","textAlign","Footer","Col","size","split","map","join","App","state","users","search","components_Wrapper","components_Col","components_Navbar","react_router","exact","path","pages_About","pages_Clients","pages_NoMatch","components_Header","components_Jumbotron","components_Footer","React","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fee1a779.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction About() {\n  return (\n    <>\n      <h1>About</h1>\n    </>\n  );\n}\nexport default About;\n","import React, { useState, useEffect } from 'react';\n\nfunction Clients(props) {\n  return (\n    <>\n      <h1>Clients</h1>\n    </>\n  );\n}\n\nexport default Clients;\n","import React from 'react';\n\nfunction NoMatch() {\n  return (\n    <>\n      <h1>No Match</h1>\n    </>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        SteadFast\n      </Link>\n      <div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === '/' ||\n                window.location.pathname === '/about'\n                  ? 'nav-link active'\n                  : 'nav-link'\n              }\n            >\n              About\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/company\"\n              className={\n                window.location.pathname === '/company'\n                  ? 'nav-link active'\n                  : 'nav-link'\n              }\n            >\n              Company\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/search\"\n              className={\n                window.location.pathname === '/search'\n                  ? 'nav-link active'\n                  : 'nav-link'\n              }\n            >\n              Search\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Header(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">\n          Find contacts and leads fast. Get back to business\n        </label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search Company\"\n          id=\"search\"\n        />\n        <p>\n          <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n            Get Started\n          </button>\n        </p>\n      </div>\n    </form>\n  );\n}\nexport default Header;\n","import React from 'react';\nimport './style.css';\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from 'react';\n\nfunction Footer({ children }) {\n    return (\n      <div\n        style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n        className=\"Footer\"\n      >\n        {children}\n      </div>\n    );\n  }\n  \n  export default Footer;","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './pages/About';\nimport Clients from './pages/Clients';\nimport NoMatch from './pages/NoMatch';\nimport NavBar from './components/Navbar';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper';\nimport Jumbotron from './components/Jumbotron';\nimport Footer from './components/Footer';\nimport Col from './components/Col';\nimport './App.css';\n\nclass App extends React.Component {\n  state = { users: [], search: '' };\n\n  render() {\n    return (\n      <Wrapper>\n        <div className=\"container\">\n          <Router>\n            <Col size=\"md-12\">\n              <NavBar>\n                <Switch>\n                  <Route exact path={['/', '/about']}>\n                    <About />\n                  </Route>\n                  <Route exact path=\"/clients/:id\">\n                    <Clients />\n                  </Route>\n                  <Route>\n                    <NoMatch />\n                  </Route>\n                </Switch>\n              </NavBar>\n            </Col>\n          </Router>\n          <Col size=\"md-4\">\n            <Header>\n              <h1>This is the Header for Steadfast</h1>\n            </Header>\n          </Col>\n          <Jumbotron>\n            <Col size=\"md-12\">\n              <div className=\"container\">\n                <h2>This is a place holder for our Steadfast App</h2>\n              </div>\n            </Col>\n          </Jumbotron>\n        </div>\n        <Col size=\"md-4\">\n            <Footer>\n              <h1>This is the Header for Steadfast</h1>\n            </Footer>\n          </Col>\n      </Wrapper>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}