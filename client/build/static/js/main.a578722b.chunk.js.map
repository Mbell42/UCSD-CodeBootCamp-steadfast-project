{"version":3,"sources":["pages/About.js","components/DeleteBtn/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/Contacts.js","pages/NoMatch.js","actions/errorActions.js","actions/types.js","actions/authActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/Navbar/index.js","components/Header/index.js","components/Wrapper/index.js","components/Jumbotron/index.js","components/Footer/index.js","components/Col/index.js","components/ContactCard/index.js","components/SeachForm/index.js","utils/index.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","pages/Detail.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","Fragment","DeleteBtn","props","Object","assign","className","role","tabIndex","API","search","query","axios","get","getContacts","getContact","id","deleteContact","delete","saveContact","contactData","post","Container","_ref","fluid","children","concat","Row","_ref2","Col","_ref3","size","split","map","join","List","ListItem","Input","TextArea","rows","FormBtn","style","float","marginBottom","Contacts","_useState","useState","_useState2","slicedToArray","contacts","setContacts","_useState3","_useState4","formObject","setFormObject","loadContacts","then","res","data","catch","err","console","log","handleInputChange","e","_e$target","target","name","value","objectSpread","defineProperty","useEffect","onChange","placeholder","disabled","firstName","lastName","email","position","company","onClick","preventDefault","notes","length","contact","key","_id","react_router_dom","to","components_DeleteBtn","NoMatch","returnErrors","msg","status","type","payload","arguments","undefined","clearErrors","tokenConfig","getState","token","auth","config","headers","Content-type","RegisterModal","state","modal","password","toggle","_this","setState","onSubmit","_this$state","newUser","register","prevProps","_this$props","this","error","isAuthenticated","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","es_Input","Button","marginTop","block","Component","connect","dispatch","body","JSON","stringify","Content-Type","response","LoginModal","user","login","Logout","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","NavLink","logout","Navbar","_this$props$auth","authLinks","react","auth_Logout","guestLinks","auth_RegisterModal","auth_LoginModal","window","location","pathname","Header","height","clear","paddingTop","textAlign","Wrapper","Jumbotron","Footer","ContactCard","department","phone","SearchForm","display","htmlFor","handleFormSubmit","refreshPage","Leads","searchContacts","emails","i","first_name","last_name","phone_number","organization","reload","components_Wrapper","components_Col","SeachForm","toConsumableArray","item","components_ContactCard","React","initialState","localStorage","getItem","isLoading","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","Detail","setContact","useParams","components_Jumbotron","App","users","components_Navbar","react_router","exact","path","component","pages_NoMatch","components_Header","components_Footer","Boolean","hostname","match","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a578722b.chunk.js","sourcesContent":["import React from 'react';\n\nfunction About() {\n  return (\n    <>\n      <h1>This is the About Page</h1>\n    </>\n  );\n}\nexport default About;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.hunter.io/v2/domain-search?domain=';\n\nexport default {\n  search: function (query) {\n    return axios.get(\n      API_URL + query + '&api_key=' + process.env.REACT_APP_API_KEY\n    );\n  },\n  // Get all contacts\n  getContacts: function () {\n    return axios.get('/api/contacts');\n  },\n  // Gets the contact with the given id\n  getContact: function (id) {\n    return axios.get('/api/contacts/' + id);\n  },\n  // Deletes the contact with the given id\n  deleteContact: function (id) {\n    return axios.delete('/api/contacts/' + id);\n  },\n  // Saves a book to the database\n  saveContact: function (contactData) {\n    return axios.post('/api/contacts', contactData);\n  },\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"13\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport DeleteBtn from '../components/DeleteBtn';\nimport API from '../utils/API';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Container } from '../components/Grid';\nimport { List, ListItem } from '../components/List';\nimport { Input, TextArea, FormBtn } from '../components/Form';\n\nfunction Contacts() {\n  // Setting our component's initial state\n  const [contacts, setContacts] = useState([]);\n  const [formObject, setFormObject] = useState({});\n\n  // Load all contacts and store them with setContacts\n  useEffect(() => {\n    loadContacts();\n  }, []);\n\n  function loadContacts() {\n    API.getContacts()\n      .then((res) => setContacts(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  // Delets a contact from the database with a given id, then reloads contacts from the db\n  function deleteContact(id) {\n    API.deleteContact(id)\n      .then((res) => loadContacts())\n      .catch((err) => console.log(err));\n  }\n\n  // Handles updateing component state the user types into the input field\n  function handleInputChange(e) {\n    const { name, value } = e.target;\n    setFormObject({ ...formObject, [name]: value });\n  }\n\n  // When the form is submitted, use the API.saveContact method to save the contact data\n  // Then reload contacts from the database\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    if (\n      formObject.firstName &&\n      formObject.lastName &&\n      formObject.company &&\n      formObject.position &&\n      formObject.email\n    ) {\n      API.saveContact({\n        firstName: formObject.firstName,\n        lastName: formObject.lastName,\n        company: formObject.company,\n        email: formObject.email,\n        position: formObject.position,\n        notes: formObject.notes,\n      })\n        .then((res) => loadContacts())\n        .catch((err) => console.log(err));\n    }\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-6\">\n          <form>\n            <Input\n              onChange={handleInputChange}\n              name=\"firstName\"\n              placeholder=\"First Name\"\n            />\n            <Input\n              onChange={handleInputChange}\n              name=\"lastName\"\n              placeholder=\"Last Name\"\n            />\n            <Input\n              onChange={handleInputChange}\n              name=\"company\"\n              placeholder=\"Company Name\"\n            />\n            <Input\n              onChange={handleInputChange}\n              name=\"position\"\n              placeholder=\"Position\"\n            />\n            <Input\n              onChange={handleInputChange}\n              name=\"email\"\n              placeholder=\"Email\"\n            />\n            <TextArea\n              onChange={handleInputChange}\n              name=\"notes\"\n              placeholder=\"Notes\"\n            />\n            <FormBtn\n              disabled={\n                !(\n                  formObject.firstName &&\n                  formObject.lastName &&\n                  formObject.email &&\n                  formObject.position &&\n                  formObject.company\n                )\n              }\n              onClick={handleFormSubmit}\n            >\n              Submit Notes\n            </FormBtn>\n          </form>\n        </Col>\n        <Col size=\"md-6 sm-12\">\n          <div>\n            <h1>CMS Contact Notes:</h1>\n          </div>\n          {contacts.length ? (\n            <List>\n              {contacts.map((contact) => (\n                <ListItem key={contact._id}>\n                  <Link to={'/contacts/' + contact._id}>\n                    <strong>\n                      {contact.email} at {contact.company}, {contact.position}\n                    </strong>\n                  </Link>\n                  <DeleteBtn onClick={() => deleteContact(contact._id)} />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <h3>No Results to Display</h3>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Contacts;\n","import React from 'react';\n\nfunction NoMatch() {\n  return (\n    <>\n      <h1>No Match</h1>\n    </>\n  );\n}\n\nexport default NoMatch;\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./types\";\n\n\n// Return errors\nexport const returnErrors = (msg, status, id = null) => {\n    return {\n        type: GET_ERRORS,\n        payload: { msg, status, id }\n    }\n} \n\n// Clear errors\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    };\n};\n\n","export const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";","import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\nimport {\n    USER_LOADING,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGOUT_SUCCESS\n    } from \"./types\";\n\n// Check token and load the user\nexport const loadUser = () => (dispatch, getState) => {\n    // If user loading\n    dispatch({ type: USER_LOADING });\n\n    axios.get(\"/api/auth/user\", tokenConfig(getState))\n        .then(res => dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({\n                type: AUTH_ERROR\n            });\n        });\n    };\n\n    // Register new user\n    export const register = ({ name, email, password }) => dispatch => {\n        const config = {\n            // Request Headers\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n\n        // Request Body\n        const body = JSON.stringify({ name, email, password });\n\n        axios.post(\"/api/users\", body, config)\n            .then(res => dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data\n            }))\n            .catch(err => {\n                dispatch(returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\"));\n                dispatch({\n                    type: REGISTER_FAIL\n                });\n            });\n    };\n\n    // Login user\n    export const login = ({ email, password }) => dispatch => {\n        const config = {\n            // Request Headers\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n\n        // Request Body\n        const body = JSON.stringify({ email, password });\n\n        axios.post(\"/api/auth\", body, config)\n            .then(res => dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            }))\n            .catch(err => {\n                dispatch(returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\"));\n                dispatch({\n                    type: LOGIN_FAIL\n                });\n            });\n    };\n\n\n    // Logout user\n    export const logout = () => {\n        return {\n            type: LOGOUT_SUCCESS\n        };\n    };\n\n    // Setup config/headers and the token\n    export const tokenConfig = getState => {\n        // Get token from localStorage\n        const token = getState().auth.token;\n\n        // Set Headers\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\"\n            }\n        }\n\n        // If there is a token, add to the headers\n        if(token) {\n            config.headers[\"x-auth-token\"] = token;\n        }\n        return config;\n    }","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from \"reactstrap\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nimport { register } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/errorActions\";\n\n\nclass RegisterModal extends Component {\n    state = {\n        modal: false,\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        msg: null\n    };\n\n    //Static PropTypes\n    static propTypes = {\n        isAuthenticated: propTypes.bool,\n        error:  propTypes.object.isRequired,\n        register: propTypes.func.isRequired,\n        clear: propTypes.func.isRequired\n    };\n\n    componentDidUpdate(prevProps) {\n        const { error, isAuthenticated } = this.props;\n        if(error !== prevProps.error) {\n            // Check for a register error\n            if(error.id === \"REGISTER_FAIL\") {\n                this.setState({ msg: error.msg.msg });\n            } else {\n                this.setState({ msg: null });\n            }\n        } \n        // If authentication is successfull, close modal\n        if (this.state.modal) {\n            if (isAuthenticated) {\n                this.toggle();\n            }\n        }\n    };\n\n    toggle = () => {\n        // Clear errors from modal\n        this.props.clearErrors();\n\n        this.setState({\n            modal: !this.state.modal\n        });\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const { name, email, password } = this.state;\n\n        // Create new user\n        const newUser = {\n            name,\n            email,\n            password\n        };\n\n        // Attempt to register new user\n        this.props.register(newUser);\n    \n        // Close modal\n        // this.toggle();\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <Link onClick = { this.toggle } href = \"#\">\n                        Register\n                    </Link>\n                </div>\n\n                <Modal isOpen = { this.state.modal } toggle = { this.toggle }>\n                    <ModalHeader toggle = { this.toggle }>Register</ModalHeader>\n                    <ModalBody>\n                        { this.state.msg ? (\n                            <Alert color = \"danger\">{ this.state.msg }</Alert>\n                        ) : null }\n                        <Form onSubmit = { this.onSubmit }>\n                            <FormGroup>\n                                <Label for = \"name\">Name</Label>\n                                <Input\n                                    type = \"text\"\n                                    name = \"name\"\n                                    id = \"id\"\n                                    placeholder = \"Name\"\n                                    className = \"mb-2\"\n                                    onChange = { this.onChange }\n                                />\n                                <Label for = \"email\">Email</Label>\n                                <Input\n                                    type = \"email\"\n                                    name = \"email\"\n                                    id = \"email\"\n                                    placeholder = \"Email\"\n                                    className = \"mb-2\"\n                                    onChange = { this.onChange }\n                                />\n                                <Label for = \"password\">Password</Label>\n                                <Input\n                                    type = \"password\"\n                                    name = \"password\"\n                                    id = \"password\"\n                                    placeholder = \"Password\"\n                                    className = \"mb-2\"\n                                    onChange = { this.onChange }\n                                />\n                                <Button color = \"dark\" style = {{ marginTop: \"32px\" }} block>\n                                    Register Now\n                                </Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n\n\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\n\nexport default connect(\n    mapStateToProps,\n    { register, clearErrors }\n)(RegisterModal);","import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from \"reactstrap\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { login } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/errorActions\";\n\n\nclass LoginModal extends Component {\n    state = {\n        modal: false,\n        email: \"\",\n        password: \"\",\n        msg: null\n    };\n\n    //Static PropTypes\n    static propTypes = {\n        isAuthenticated: propTypes.bool,\n        error: propTypes.object.isRequired,\n        login: propTypes.func.isRequired,\n        clear: propTypes.func.isRequired\n    };\n\n    componentDidUpdate(prevProps) {\n        const { error, isAuthenticated } = this.props;\n        if(error !== prevProps.error) {\n            // Check for a register error\n            if(error.id === \"LOGIN_FAIL\") {\n                this.setState({ msg: error.msg.msg });\n            } else {\n                this.setState({ msg: null });\n            }\n        } \n        \n        // If authentication is successfull, close modal\n        if (this.state.modal) {\n            if (isAuthenticated) {\n                this.toggle();\n            }\n\n        }\n    }\n\n    toggle = () => {\n        // Clear errors from modal\n        this.props.clearErrors();\n\n        this.setState({\n            modal: !this.state.modal\n        });\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const { email, password } = this.state;\n\n        const user = {\n            email,\n            password\n        };\n        // attempt to login user\n        this.props.login(user);\n\n        // Close modal\n        // this.toggle();\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <Link onClick = { this.toggle } href = \"#\">\n                        Login\n                    </Link>\n                </div>\n\n                <Modal isOpen = { this.state.modal } toggle = { this.toggle }>\n                    <ModalHeader toggle = { this.toggle }>Login</ModalHeader>\n                    <ModalBody>\n                        { this.state.msg ? (\n                            <Alert color = \"danger\">{ this.state.msg }</Alert>\n                        ) : null }\n                        <Form onSubmit = { this.onSubmit }>\n                            <FormGroup>\n                                <Label for = \"email\">Email</Label>\n                                <Input\n                                    type = \"email\"\n                                    name = \"email\"\n                                    id = \"email\"\n                                    placeholder = \"Email\"\n                                    className = \"mb-2\"\n                                    onChange = { this.onChange }\n                                />\n                                <Label for = \"password\">Password</Label>\n                                <Input\n                                    type = \"password\"\n                                    name = \"password\"\n                                    id = \"password\"\n                                    placeholder = \"Password\"\n                                    className = \"mb-2\"\n                                    onChange = { this.onChange }\n                                />\n                                <Button color = \"dark\" style = {{ marginTop: \"32px\" }} block>\n                                    Login\n                                </Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n\n\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\n\nexport default connect(\n    mapStateToProps,\n    { login, clearErrors }\n)(LoginModal);","import React, { Component, Fragment } from \"react\";\nimport propTypes from \"prop-types\";\nimport { NavLink } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/authActions\";\n\nexport class Logout extends Component {\n    //Static PropTypes\n    static propTypes = {\n        logout: this.propTypes.func.isRequired\n    };\n\n    \n    render() {\n        return (\n            <fragment>\n                <NavLink onClick = { this.props.logout } href = \"#\">\n                    Logout\n                </NavLink>\n            </fragment>\n        );\n    }\n} \n\nexport default connect(null, { logout })(Logout);","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { NavLink } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport RegisterModal from \"../auth/RegisterModal\";\nimport LoginModal from \"../auth/LoginModal\";\nimport Logout from \"../auth/Logout\";\nimport { NavItem } from \"reactstrap\";\n\nclass Navbar extends Component {\n  // state = {\n  //   isOpen: false\n  // };\n\n  //Static PropTypes\n  static propTypes = {\n    auth: propTypes.object.isRequired\n  };\n\n  // toggle = () =>  {\n  //   this.setState({\n  //     isOpen: !this.state.isOpen\n  //   });\n  // };\n\n  render () {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const authLinks = (\n      <Fragment>\n        <li>\n          <span className = \"navbar-text mr-3\">\n            <p>{ user ? `Welcome ${user.name}!` : \"\" }</p>\n          </span>\n        </li>\n        <li>\n          <Logout />\n        </li>\n      </Fragment>\n    );\n\n    const guestLinks = (\n      <Fragment>\n        <li>\n          <RegisterModal />\n        </li>\n        <li>\n          <LoginModal />\n        </li>\n      </Fragment>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        SteadFast\n      </Link>\n      <div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === '/' ||\n                window.location.pathname === '/about'\n                  ? 'nav-link active'\n                  : 'nav-link'\n              }\n            >\n              About\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/contacts\"\n              className={\n                window.location.pathname === '/contacts'\n                  ? 'nav-link active'\n                  : 'nav-link'\n              }\n            >\n              Contact\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/search\"\n              className={\n                window.location.pathname === '/search'\n                  ? 'nav-link active'\n                  : 'nav-link'\n              }\n            >\n              Search\n            </Link>\n          </li>\n            <li>\n              { isAuthenticated ? authLinks : guestLinks }\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\n\n// function Navbar() {\n//   return (\n//     <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n//       <Link className=\"navbar-brand\" to=\"/\">\n//         SteadFast\n//       </Link>\n//       <div>\n//         <ul className=\"navbar-nav\">\n//           <li className=\"nav-item\">\n//             <Link\n//               to=\"/\"\n//               className={\n//                 window.location.pathname === '/' ||\n//                 window.location.pathname === '/about'\n//                   ? 'nav-link active'\n//                   : 'nav-link'\n//               }\n//             >\n//               About\n//             </Link>\n//           </li>\n//           <li className=\"nav-item\">\n//             <Link\n//               to=\"/contacts\"\n//               className={\n//                 window.location.pathname === '/contacts'\n//                   ? 'nav-link active'\n//                   : 'nav-link'\n//               }\n//             >\n//               Contact\n//             </Link>\n//           </li>\n//           <li className=\"nav-item\">\n//             <Link\n//               to=\"/search\"\n//               className={\n//                 window.location.pathname === '/search'\n//                   ? 'nav-link active'\n//                   : 'nav-link'\n//               }\n//             >\n//               Search\n//             </Link>\n//           </li>\n//         </ul>\n//       </div>\n//     </nav>\n//   );\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(Navbar);\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <form>\n        <div\n          style={{\n            height: 100,\n            clear: 'both',\n            paddingTop: 30,\n            textAlign: 'left',\n          }}\n          className=\"form-group\"\n        >\n          <h3>Find contacts and leads fast. Get back to business</h3>\n        </div>\n      </form>\n    );\n  }\n}\nexport default Header;\n","import React from 'react';\nimport './style.css';\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from 'react';\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 100,\n        clear: 'both',\n        paddingTop: 25,\n        textAlign: 'center',\n      }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from 'react';\n\nfunction Footer({ children }) {\n    return (\n      <div\n        style={{  height: 150, clear: \"both\", paddingTop: 100, textAlign: \"center\" }}\n        className=\"Footer\"\n      >\n        {children}\n      </div>\n    );\n  }\n  \n  export default Footer;","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from 'react';\n\nfunction ContactCard(props) {\n  return (\n    <thead>\n      <tr>\n        <td>{props.company}</td>\n        <td>{props.department}</td>\n        <td>{props.position}</td>\n        <td>{props.firstName}</td>\n        <td>{props.lastName}</td>\n        <td>{props.email}</td>\n        <td>{props.phone}</td>\n        <td>{props.state}</td>\n      </tr>\n    </thead>\n  );\n}\n\nexport default ContactCard;\n","import React from 'react';\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\" style={{ display: 'flex' }}>\n        <label htmlFor=\"search\"></label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search Organization\"\n          id=\"search\"\n        />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n          Search\n        </button>\n        <button onClick={props.refreshPage} className=\"btn btn-primary ml-1\">\n          Reset\n        </button>\n        {/* <br /> */}\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport ContactCard from '../components/ContactCard';\nimport SearchForm from '../components/SeachForm';\nimport Wrapper from '../components/Wrapper';\nimport Col from '../components/Col';\nimport API from './API';\nimport './App.css';\n\nclass Leads extends React.Component {\n  state = { contacts: [], search: '' };\n\n  componentDidMount() {\n    this.searchContacts('hunterio.com');\n  }\n\n  refreshPage() {\n    window.location.reload(false);\n  }\n\n  searchContacts = (query) => {\n    API.search(query)\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          contacts: res.data.data.emails.map((e, i) => ({\n            firstName: e.first_name,\n            lastName: e.last_name,\n            email: e.value,\n            position: e.position,\n            phone: e.phone_number,\n            department: e.department,\n            company: res.data.data.organization,\n            state: res.data.data.state,\n            key: i,\n          })),\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n    console.log('Handle ', this.state.search);\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    console.log('Button Clicked', this.state.search, e);\n    this.searchContacts(this.state.search);\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <div className=\"container fluid\">\n          <div className=\"row\">\n            <Col size=\"md-6\">\n              <h2>Contact Directory</h2>\n              <SearchForm\n                value={this.state.search}\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n              />\n            </Col>\n          </div>\n\n          <div className=\"row\">\n            <Col size=\"md-12\">\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th>Company</th>\n                    <th>Department</th>\n                    <th>Position</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>State</th>\n                  </tr>\n                </thead>\n\n                {[...this.state.contacts].map((item) => (\n                  <ContactCard\n                    company={item.company}\n                    department={item.department}\n                    position={item.position}\n                    firstName={item.firstName}\n                    lastName={item.lastName}\n                    email={item.email}\n                    phone={item.phone}\n                    state={item.state}\n                    key={item.key}\n                  />\n                ))}\n              </table>\n            </Col>\n          </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Leads;\n","import { GET_ERRORS, CLEAR_ERRORS} from \"../actions/types\";\n\nconst initialState = {\n    msg: {},\n    status: null,\n    id: null\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n            case CLEAR_ERRORS:\n                return {\n                    msg: {},\n                    status: null,\n                    id: null\n                };\n                default:\n                    return state;\n    }\n}","import {\nUSER_LOADING,\nUSER_LOADED,\nAUTH_ERROR,\nLOGIN_SUCCESS,\nLOGIN_FAIL,\nREGISTER_SUCCESS,\nREGISTER_FAIL,\nLOGOUT_SUCCESS\n} from \"../actions/types\";\n\nconst initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n};\n\n// Actions for each case\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n            };\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS:\n            localStorage.setItem(\"token\", action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false\n            };\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT_SUCCESS:    \n        case REGISTER_FAIL:\n            localStorage.removeItem(\"token\");\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            }\n            default:\n                return state;\n    }\n}","import { combineReducers} from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\n\nexport default combineReducers({\n    error: errorReducer,\n    auth: authReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport combineReducers from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(combineReducers, initialState, compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nexport default store;\n\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Col, Row, Container } from '../components/Grid';\nimport Jumbotron from '../components/Jumbotron';\nimport API from '../utils/API';\n\nfunction Detail(props) {\n  const [contact, setContact] = useState({});\n\n  // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  const { id } = useParams();\n  useEffect(() => {\n    API.getContact(id)\n      .then((res) => setContact(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>\n              {contact.company} by {contact.email}, {contact.position}\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-12 md-offset-1\">\n          <article>\n            <h1>Notes</h1>\n            <p>{contact.notes}</p>\n          </article>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-2\">\n          <Link to=\"/contacts\">← Back to Contacts</Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Detail;\n","import React, { useState, } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './pages/About';\nimport Contacts from './pages/Contacts';\nimport NoMatch from './pages/NoMatch';\nimport NavBar from './components/Navbar';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper';\nimport Jumbotron from './components/Jumbotron';\nimport Footer from './components/Footer';\nimport Col from './components/Col';\nimport Leads from './utils';\nimport './App.css';\nimport { Input, TextArea, FormBtn } from \"./components/Form\";\nimport { Row, Container } from \"./components/Grid\";\n\nimport store from \"./store\";\nimport { loadUser } from \"./actions/authActions\";\nimport Detail from './pages/Detail';\n\n// function handleInputChange(event) {\n \n// };\n\n// When the form is submitted, use the API.saveBook method to save the book data\n// Then reload books from the database\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n};\n\n// Loads all books and sets them to books\n\nclass App extends React.Component {\n  state = { users: [], search: '' };\n\n  componentDidMount() {\n    store.dispatch(loadUser());\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <div className=\"container\">\n          <Router>\n            <Col size=\"md-12\">\n              <NavBar />\n              <Switch>\n                <Route exact path=\"/\" component={About} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contacts\" component={Contacts} />\n                <Route exact path=\"/contacts/:id\" component={Detail} />\n                <Route exact path=\"/search\" component={Leads} />\n                <Route>\n                  <NoMatch />\n                </Route>\n              </Switch>\n            </Col>\n          </Router>\n          <Col size=\"md-12\">\n            <Header>\n              <h1>This is the Header for Steadfast</h1>\n            </Header>\n          </Col>\n          <Jumbotron>\n            <Col size=\"md-12\">\n              <div className=\"container fluid\"></div>\n            </Col>\n          </Jumbotron>\n        </div>\n        <hr></hr>\n\n        <Col size=\"md-12\">\n          <Footer>\n            <br></br>\n            <p>San Diego, CA | Updated 2020</p>\n          </Footer>\n        </Col>\n      </Wrapper>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}